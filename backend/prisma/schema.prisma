// backend/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SlackInstallation {
  id                String             @id @default(cuid())
  teamId            String
  userId            String // New field to track individual users
  data              Json
  scheduledMessages ScheduledMessage[]

  @@unique([teamId, userId]) // Composite unique constraint
}

model ScheduledMessage {
  id             String            @id @default(cuid())
  channelId      String
  message        String
  sendAt         DateTime
  status         String            @default("PENDING")
  createdAt      DateTime          @default(now())
  installationId String
  installation   SlackInstallation @relation(fields: [installationId], references: [id])
  sendAsUser     Boolean           @default(false)
}

model OAuthState {
  id        Int      @id @default(autoincrement())
  state     String   @unique
  createdAt DateTime @default(now())
}

// New model for user sessions
model UserSession {
  id        String   @id @default(cuid())
  userId    String
  teamId    String
  token     String   @unique // Session token for frontend
  createdAt DateTime @default(now())
  expiresAt DateTime

  @@unique([userId, teamId])
}
